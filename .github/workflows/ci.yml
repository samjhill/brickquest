name: BrickQuest CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-simulate:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build card database
        run: npm run cards:build
      
      - name: Lint cards
        run: npm run cards:lint
      
      - name: Run unit tests
        run: npm test
      
      - name: Run simulations (CI mode - reduced)
        run: npm run sim:run -- --scenarios all --games 500 --seeds 8
        timeout-minutes: 30
      
      - name: Generate balance report
        run: npm run sim:report
      
      - name: Upload simulation results
        uses: actions/upload-artifact@v3
        with:
          name: simulation-results-${{ matrix.node-version }}
          path: |
            sim_results.json
            docs/BALANCE.md
          retention-days: 30
      
      - name: Check for balance issues
        id: balance-check
        run: |
          if grep -q "⚠️ \*\*WARNING\*\*" docs/BALANCE.md; then
            echo "::warning::Balance issues detected. Review docs/BALANCE.md"
            echo "has_warnings=true" >> $GITHUB_OUTPUT
          else
            echo "has_warnings=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true
      
      - name: Comment balance warnings on PR
        if: github.event_name == 'pull_request' && steps.balance-check.outputs.has_warnings == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const balanceReport = fs.readFileSync('docs/BALANCE.md', 'utf8');
            const warnings = balanceReport.match(/⚠️.*$/gm) || [];
            
            if (warnings.length > 0) {
              const comment = `## ⚠️ Balance Issues Detected\n\n${warnings.slice(0, 5).join('\n')}\n\nSee full report in CI artifacts.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
  
  build-cheatsheet:
    runs-on: ubuntu-latest
    needs: test-and-simulate
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build cheatsheet PDF
        run: npm run cheat:build
        continue-on-error: true
      
      - name: Upload cheatsheet
        uses: actions/upload-artifact@v3
        with:
          name: cheatsheet-pdf
          path: docs/BrickQuest_CheatSheet.pdf
          retention-days: 30
        if: success()
  
  lint-and-validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Validate card schema
        run: npm run cards:lint
      
      - name: Check for duplicate cards
        run: npm run cards:dedupe
      
      - name: TypeScript compile check
        run: npx tsc --noEmit
  
  summary:
    runs-on: ubuntu-latest
    needs: [test-and-simulate, build-cheatsheet, lint-and-validate]
    if: always()
    
    steps:
      - name: Check job results
        run: |
          echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: ${{ needs.test-and-simulate.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cheatsheet: ${{ needs.build-cheatsheet.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Linting: ${{ needs.lint-and-validate.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.test-and-simulate.result }}" != "success" ] || [ "${{ needs.lint-and-validate.result }}" != "success" ]; then
            echo "❌ CI checks failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ All CI checks passed" >> $GITHUB_STEP_SUMMARY
          fi
